{"version":3,"sources":["components/media/inflicted.mp3","components/pomodoro/TimerSettings.js","actions/index.js","actions/actionType.js","components/randomPhrases/randomPhrases.js","components/randomPhrases/RandomPhrasesApp.js","components/pomodoro/importantEvents.js","components/pomodoro/PomodoroApp.js","components/toDoList/todoInput.js","components/toDoList/Tasks.js","components/toDoList/TodoListApp.js","App.js","serviceWorker.js","reducers/todosReducer.js","reducers/pomodoroReduce.js","reducers/randomPhrasesReducer.js","reducers/index.js","index.js"],"names":["module","exports","TimerSetter","label","this","props","labelId","displayValue","sessionLength","breakLength","longBreakLength","className","id","increment","onClick","addTime","lengthId","decrement","subTime","React","Component","connect","state","pomodoro","type","allPhrases","quote","RandomQuoteGenerator","allQuotes","sessionIndex","index","DateTime","require","importantEvents","date","local","set","hours","minutes","seconds","milliseconds","PomodoroClock","timerLabel","timeLeft","Duration","fromObject","sessions","classDay","setLocale","weekdayLong","nextImportantEvent","calcMessage","Math","floor","random","startStop","startPause","nextQuote","bind","reset","startTimer","timer","handleStart","calculateBreaks","handleTrybeMessages","nextEventHandler","setAudioRef","element","audioRef","checkDateTime","hour","minute","setState","trybeMessages","end","now","endCorrected","plus","handleTimer","document","title","toFormat","replace","handleNewSession","play","toggleTimer","timerID","running","clearInterval","setInterval","resetTimer","pause","currentTime","weekDay","weekday","timeToNextEvent","diffNow","toObject","sessionAndBreak","i","eventHour","eventMinutes","length","calculateButton","data-toggle","data-target","aria-expanded","aria-controls","aria-hidden","startStopButton","map","Button","variant","key","onOff","preload","ref","src","boopboop","reseted","startPauseLabel","isLongBreak","TodoInput","textInput","textList","handleChange","handleSubmit","e","target","value","addTodo","toString","substr","preventDefault","onSubmit","placeholder","onChange","task","newId","text","complete","Task","selected","onDoubleClick","check","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","remove","TodoList","updateDisplayStatus","string","updateDisplay","ListDisplay","display","todo","filter","toggleComplete","removeTodo","navButtons","todoList","todos","removeId","toggleId","status","App","Boolean","window","location","hostname","match","initialState","todosReducer","action","idx","findIndex","slice","toggleIdx","newTodos","pomodoroReduce","diff","randomPhrasesReducer","combineReducers","todoReducer","phrases","phrasesReducer","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6696f003.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/inflicted.2d55e753.mp3\";","import React from 'react';\nimport { addTime, subTime } from '../../actions/index'\nimport { connect } from 'react-redux'\n\nclass TimerSetter extends React.Component{\n  render(){\n    const label = this.props.labelId\n    let displayValue = label === 'session-label' ? this.props.sessionLength : label === 'break-label' ? this.props.breakLength : this.props.longBreakLength\n\n    return(\n      <div className = 'container mt-3'>\n        <div className = 'row'>\n           <div className = 'col'>\n            <div className = 'break-input-label' id = {label} >\n              {this.props.label}\n            </div>\n          </div>\n          <div className = 'col settings-inputs'>\n            <div className = 'row'>\n              <div>\n                <button className = 'btn btn-outline-light btn-settings' id = {this.props.increment} onClick = {() => this.props.addTime(label)}><i className='fas fa-angle-up'/></button>\n              </div>\n              \n              <div className = 'break-input' id = {this.props.lengthId}>\n                {displayValue}\n              </div>\n\n              <div>\n                <button className = 'btn btn-outline-light btn-settings' id = {this.props.decrement} onClick = {() => this.props.subTime(label)}><i className='fas fa-angle-down'/></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapState (state){\n  return {\n    sessionLength: state.pomodoro.sessionLength,\n    breakLength: state.pomodoro.breakLength,\n    longBreakLength: state.pomodoro.longBreakLength\n  }\n}\n\nexport default connect(\n  mapState,\n  { addTime, subTime }\n)(TimerSetter);","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, UPDATE_DISPLAY, ADD_TIME, SUB_TIME, START_PAUSE, RESET, TIMER, NEW_SESSION } from './actionType.js'\n\nexport const addTodo = (task, newId) =>({\n  type: ADD_TODO,\n  id: newId,\n  text: task,\n  complete: false,\n})\n\nexport const removeTodo = (removeId) => ({\n  type: REMOVE_TODO,\n  id: removeId\n})\n\nexport const toggleComplete = (toggleId) => ({\n  type: TOGGLE_TODO,\n  id: toggleId\n})\n\nexport const updateDisplay = (status) => ({\n  type: UPDATE_DISPLAY,\n  text: status\n})\n\nexport const addTime = (label) => ({\n  type: ADD_TIME,\n  label:label\n})\n\nexport const subTime = (label) => ({\n  type: SUB_TIME,\n  label:label\n})\n\nexport const toggleTimer = () => ({\n  type: START_PAUSE,\n})\n\nexport const resetTimer = (label) => ({\n  type: RESET,\n})\n\nexport const handleTimer = (end) => ({\n  type: TIMER,\n  end: end\n})\n\nexport const handleNewSession = (isLongBreak) => ({\n  type: NEW_SESSION,\n  isLongBreak: isLongBreak\n})","export const ADD_TODO = \"ADD_TODO\"\nexport const REMOVE_TODO = \"REMOVE_TODO\" \nexport const TOGGLE_TODO = \"TOGGLE_TODO\"\nexport const UPDATE_DISPLAY = \"UPDATE_DISPLAY\"\nexport const ADD_TIME = \"ADD_TIME\"\nexport const SUB_TIME = \"SUB_TIME\"\nexport const START_PAUSE = \"START_PAUSE\"\nexport const RESET = \"RESET\"\nexport const TIMER = \"TIMER\"\nexport const NEW_SESSION = \"NEW_SESSION\"","\nconst allPhrases = [\n[\n  {quote: \"Vamos Começar?\"},\n  {quote: \"Pronto para mais uma sessão de foco total?\"},\n  {quote: \"Se arrume na cadeira, bloqueie o celular e vamos começar!\"},\n  {quote: \"Já fez seu ciclo pomodoro de hoje? Bora!\"}]\n,\n[\n  {quote: \"Bota esse celular de lado e estuda meu filho!\"},\n  {quote: \"Ta me lendo por quê? É hora de estudarrr!!!\"},\n  {quote: \"Momento de foco total agora!\"},\n  {quote: \"Bora bora, hora de estudar, só para quando ouvir o alarme!\"}\n],\n[\n  {quote: \"Hora de levantar e alongar!\"},\n  {quote: \"Que tal fazer algum exercício nessa pausa, uma caminhada já ajuda!\"},\n  {quote: \"Aproveita esse tempinho pra pegar uma água, hidrate-se!\"},\n  {quote: \"Ta bom, agora pode usar um pouco o celular!\"}\n],\n[\n  {quote: \"Agora sim, hora de dar uma boa descansada!\"},\n  {quote: \"Parabéns pelo esforço!! Hora de dar uma limpada no cérebro\"},\n  {quote: \"Chegou a tão esperada pausa longa! Uma medição pode ser ótimo!\"},\n  {quote: \"Hora de ver aquele vídeo no youtube, ou dar uma olhada no instagram!\"}\n]\n,]\n\nexport default allPhrases;","import React from 'react'\nimport allQuotes from './randomPhrases.js'\nimport './randomPhrasesStyle.css'\n\nclass RandomQuoteGenerator extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  //functions\n  \n  render(){\n    \n    let quote = allQuotes[this.props.sessionIndex][this.props.index].quote\n    return (\n      <div className='random-phrase'>\n        <p id = \"text\">{quote}</p>\n      </div>\n    )\n  };\n  \n}\n\nexport default RandomQuoteGenerator;","const { DateTime } = require(\"luxon\");\nconst importantEvents = [\n  {\n    date: DateTime.local().set({hours: 16, minutes: 30 , seconds: 0 , milliseconds: 0}), label: \"Aula\"\n  },\n  {\n    date: DateTime.local().set({hours: 19, minutes: 20 , seconds: 0 , milliseconds: 0}), label: \"Forms\"\n  },\n  {\n    date: DateTime.local().set({hours: 19, minutes: 40 , seconds: 0 , milliseconds: 0}), label: \"Fechamento\"\n  }\n]\n\nexport default importantEvents;","import React from 'react';\nimport Duration from 'luxon/src/duration.js';\nimport TimerSetter from './TimerSettings.js'\nimport RandomQuoteGenerator from '../randomPhrases/RandomPhrasesApp.js'\nimport importantEvents from \"./importantEvents.js\"\nimport boopboop from '../media/inflicted.mp3'\nimport './pomodoroStyle.css'\nimport { connect } from 'react-redux'\nimport { toggleTimer, resetTimer, handleTimer, handleNewSession } from '../../actions/index'\nimport Button from 'react-bootstrap/Button'\n\nconst { DateTime } = require(\"luxon\");\n\nclass PomodoroClock extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sessionLength: 25,\n      breakLength: 5,\n      longBreakLength: 20,\n      timerLabel: \"Sessão de Estudo\",\n      timeLeft: Duration.fromObject({ minutes: 25 }),\n      sessions: 0,\n      classDay: DateTime.local().setLocale('pt-br').weekdayLong,\n      nextImportantEvent: importantEvents[0].date,\n      calcMessage: \"Vimos que você está em horário de aula, gostaria de calcular automaticamente os próximos intervalos?\",\n      index: Math.floor(Math.random() * 4),\n      sessionIndex: 0,\n      startStop: 'reset',\n      startPause: 'pause',\n\n    }\n    this.nextQuote = this.nextQuote.bind(this)\n    this.reset = this.reset.bind(this)\n    this.startTimer = this.startTimer.bind(this)\n    this.timer = this.timer.bind(this)\n    this.handleStart = this.handleStart.bind(this)\n    this.calculateBreaks = this.calculateBreaks.bind(this)\n    this.handleTrybeMessages = this.handleTrybeMessages.bind(this)\n    this.nextEventHandler = this.nextEventHandler.bind(this)\n    this.setAudioRef = element => {\n      this.audioRef = element;\n    };\n  }\n\n  componentDidMount() {\n    if (this.checkDateTime()) {\n      this.nextEventHandler()\n    }\n  }\n\n  handleTrybeMessages() {\n    const hour = DateTime.local().hour\n    const minutes = DateTime.local().minute\n    this.setState({\n      trybeMessages: hour === 19 && minutes < 20 ?\n        \"Já está quase no horário de preenchimento do forms, aproveite esse tempo para preencher com calma\" :\n        hour === 19 && minutes >= 20 && minutes < 40 ?\n          \"Está no horário de preencher o forms, hora de dar uma descansada, enviar seus feedbacks e se preparar para o fechamento\" :\n          hour === 19 && minutes >= 40 ?\n            \"Você deveria estar no fechamento do dia, corre pro zoom!!!\" :\n            \"Você está próximo de um momento síncrono, hora de finalizar suas tarefas e se preparar, corre pro zoom!!!\"\n    })\n  }\n\n  timer(end) {\n\n    const now = DateTime.local().set({ milliseconds: 0 })\n    const endCorrected = end.plus({ seconds: 1 })\n    if (this.checkDateTime()) {\n      this.nextEventHandler()\n    }\n\n    this.props.handleTimer(end)\n\n    document.title = this.props.timeLeft.toFormat(\"mm ss\").replace(/\\s/, \":\")\n\n    if (+endCorrected === +now && this.props.sessions !== 4) {\n      this.props.handleNewSession(false)\n\n      this.handleTrybeMessages()\n      this.audioRef.play()\n      this.startTimer()\n    }\n    else if (+endCorrected === +now && this.props.sessions === 4) {\n      this.props.handleNewSession(true)\n\n      this.audioRef.play()\n      this.startTimer()\n    }\n  }\n\n  handleStart() {\n    this.props.toggleTimer()\n\n    this.startTimer()\n  }\n\n  startTimer() {\n    if (this.timerID && this.props.running) {\n      clearInterval(this.timerID)\n    }\n    else {\n      const end = DateTime.local().set({ milliseconds: 0 }).plus(this.props.timeLeft)\n      this.timerID = setInterval(() => { this.timer(end) }, 1000)\n      this.nextQuote()\n    }\n  }\n\n  reset() {\n    this.props.resetTimer();\n    this.audioRef.pause()\n    this.audioRef.currentTime = 0\n    clearInterval(this.timerID)\n\n    this.nextQuote()\n  }\n\n  checkDateTime() {\n    const weekDay = DateTime.local().weekday\n    const hour = DateTime.local().hour\n    if (weekDay >= 1 && weekDay <= 5) {\n      if (hour >= 14 && hour < 20) {\n        return true\n      }\n      else {\n        return false\n      }\n    }\n    else {\n      return false\n    }\n  }\n\n  calculateBreaks() {\n    const timeToNextEvent = this.state.nextImportantEvent.diffNow(['minutes']).toObject().minutes\n    let sessionAndBreak = timeToNextEvent / 4\n\n    if (this.checkDateTime()) {\n      if (sessionAndBreak < 20) {\n        for (let i = 3; sessionAndBreak < 20; i--) {\n          sessionAndBreak = timeToNextEvent / i\n        }\n      }\n      if (this.state.nextImportantEvent.diffNow(['minutes']).toObject().minutes < 15) {\n        this.handleTrybeMessages()\n      }\n      else {\n        this.setState({\n          sessionLength: Math.floor(sessionAndBreak / 6 * 5),\n          breakLength: Math.floor(sessionAndBreak / 6),\n          timeLeft: Duration.fromObject({ minutes: Math.floor(sessionAndBreak / 6 * 5) }),\n          calcMessage: \"Pronto para começar a sessão de estudos!\"\n        })\n      }\n    }\n  }\n\n  nextEventHandler() {\n    const { nextImportantEvent } = this.state\n    const date = DateTime.local()\n    const hour = DateTime.local().hour\n    const minutes = DateTime.local().minute\n    const eventHour = nextImportantEvent.hour\n    const eventMinutes = nextImportantEvent.minute\n\n    if (hour > eventHour || (hour === eventHour && minutes >= eventMinutes)) {\n      for (let i = 0; i < importantEvents.length - 1; i++) {\n        if (importantEvents[i].date < date) {\n          this.setState({\n            nextImportantEvent: importantEvents[i + 1].date\n          })\n        }\n      }\n    }\n  }\n\n  nextQuote() {\n    this.setState((state) => {\n      return {\n        index: Math.floor(Math.random() * 4),\n        sessionIndex: state.startStop === \"reset\" ? 0 : state.timerLabel === \"Sessão de Estudo\" ? 1 : state.timerLabel === \"Pausa Curta\" ? 2 : 3\n      }\n\n    })\n  }\n\n\n  render() {\n    let calculateButton;\n    if (this.checkDateTime()) {\n      calculateButton =\n        <div className='auto-calculate-wrapper'>\n          <button className=\"classInfo\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n            <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n          </button>\n          <div className=\"collapse\" id=\"collapseExample\">\n            <div className=\"card card-body\">\n              <h3>{this.state.calcMessage}</h3>\n              <button className=\"btn-calculate\" onClick={this.calculateBreaks}>Calcular</button>\n            </div>\n          </div>\n        </div>\n    }\n    let btnArray = ['start_pause', 'reset']\n    let startStopButton = btnArray.map((element) => (\n      <Button variant=\"outline-light\" key={element} className={element === 'reset' && this.props.reset ? \"btn-start btn-outline-light start-stop hide\"\n        : element === 'reset' ? 'btn-start reset btn-outline-light start-stop'\n          : element === 'start_pause' && this.props.reset ? 'btn-start btn-outline-light start-stop'\n            : \"btn-start btn-outline-light start-stop start-pause\"}\n\n        onClick={element === 'start_pause' ? () => { this.handleStart() } : () => { this.reset() }}\n      >\n        {element === 'reset' ? \"Zerar\"\n          : element === \"start_pause\" && this.props.running ? \"Pausar\"\n            : \"Começar\"}\n      </Button>\n    ))\n    return (\n      <div className='pomodoro-global-container container'>\n\n\n\n        <div>\n          <div id='time-left' className='clock-wrapper pt-5'>\n            <div className='rounded-circle timer flex-clock'>\n              <h1 className=\"clock \">{this.props.timeLeft.toFormat(\"mm ss\").replace(/\\s/, \":\")}</h1>\n              <div className='time-label' id='timer-label'>{this.props.timerLabel}</div>\n            </div>\n          </div>\n\n          <div className='container phrase-wrap'>\n            <div className='text-center'>\n              <RandomQuoteGenerator label={this.state.timerLabel}\n                onOff={this.state.startStop} index={this.state.index} sessionIndex={this.state.sessionIndex} />\n            </div>\n          </div>\n\n          <div className=\"container start-stop-wrapper mt-3\">\n            {startStopButton}\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='container mt-4 col-12 col-md-4 ml-auto'>\n            <h2 className='text-center text-head'>Config</h2>\n            <div className='mt-4'>\n              {calculateButton}\n\n              <TimerSetter\n                length={this.state.breakLength}\n                label=\"Pausa Curta\"\n                labelId=\"break-label\"\n                increment=\"break-increment\"\n                decrement=\"break-decrement\"\n                lengthId=\"break-length\"\n                handleTimer={this.handleTimer}\n                timeLeft={this.timeLeft} />\n\n              <TimerSetter\n                length={this.state.longBreakLength}\n                label=\"Pausa Longa\"\n                labelId=\"long-break-label\"\n                increment=\"long-break-increment\"\n                decrement=\"long-break-decrement\"\n                lengthId=\"long-break-length\"\n                handleTimer={this.handleTimer}\n                timeLeft={this.timeLeft} />\n\n              <TimerSetter\n                length={this.state.sessionLength}\n                label=\"Sessão de Estudo\"\n                labelId=\"session-label\"\n                increment=\"session-increment\"\n                decrement=\"session-decrement\"\n                lengthId=\"session-length\"\n                handleTimer={this.handleTimer}\n                timeLeft={this.timeLeft} />\n            </div>\n          </div>\n        </div>\n        <audio id=\"beep\" preload=\"auto\" ref={this.setAudioRef} src={boopboop} />\n      </div>\n    )\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    running: state.pomodoro.running,\n    reset: state.pomodoro.reseted,\n    sessionLength: state.pomodoro.sessionLength,\n    breakLength: state.pomodoro.breakLength,\n    longBreakLength: state.pomodoro.longBreakLength,\n    timeLeft: state.pomodoro.timeLeft,\n    sessions: state.pomodoro.sessions,\n    timerLabel: state.pomodoro.timerLabel,\n    startPauseLabel: state.pomodoro.startPauseLabel\n  }\n}\n\nexport default connect(\n  mapState,\n  { toggleTimer, resetTimer, handleTimer, handleNewSession }\n)(PomodoroClock);","import React from 'react'\nimport {connect} from 'react-redux'\nimport {addTodo} from '../../actions/index'\n\n\nclass TodoInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      textInput: \"\",\n      textList: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({\n      textInput: e.target.value,\n    })\n  }\n\n  handleSubmit(e) {\n    let newId = function () {\n      return Math.random().toString(36).substr(2, 9);\n    }\n\n    this.props.addTodo(this.state.textInput, newId())\n\n    e.preventDefault()\n    \n    this.setState({\n      textInput: \"\",\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group row\">\n            <div className='col-8 col-sm-9 col-md-10'>\n              <input value={this.state.textInput} className='form-control' type=\"text\" placeholder=\"tarefa\" onChange={this.handleChange} />\n            </div>\n            <div className='col-2'>\n              <button className='btn-outline-success1 btn-settings ml-auto' type=\"input\" >Adicionar</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { addTodo }\n)(TodoInput)\n","import React from 'react'\n\nclass Task extends React.Component {\n  render() {\n    return (< div\n      className={this.props.complete && this.props.selected ? \"complete selected\" : this.props.complete ? \"complete\" : this.props.selected ? \"selected\" : \"\"}\n      onDoubleClick={this.props.check}\n    >\n      <div className='row'>\n        {this.props.text}\n        <div className=\"task-interactive ml-auto\">\n          <span onClick={this.props.check}>\n            {this.props.complete ? <svg className=\"bi bi-check\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M13.854 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L6.5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\" />\n            </svg> :\n              <svg className=\"bi bi-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\" clipRule=\"evenodd\" />\n              </svg>\n            }\n          </span>\n          <span onClick={this.props.remove}>\n            <svg className=\"bi bi-x\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 010 .708l-7 7a.5.5 0 01-.708-.708l7-7a.5.5 0 01.708 0z\" clipRule=\"evenodd\" />\n              <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 000 .708l7 7a.5.5 0 00.708-.708l-7-7a.5.5 0 00-.708 0z\" clipRule=\"evenodd\" />\n            </svg>\n          </span>\n        </div>\n      </div>\n    </div>)\n  }\n}\n\nexport default Task","import React from 'react'\nimport TodoInput from './todoInput'\nimport Task from './Tasks'\nimport './todoListStyle.css'\nimport { connect } from 'react-redux'\nimport { removeTodo, toggleComplete, updateDisplay } from '../../actions/index'\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.updateDisplayStatus = this.updateDisplayStatus.bind(this)\n  }\n\n  updateDisplayStatus(string) {\n    this.props.updateDisplay(string)\n  }\n\n  render() {\n    const buttons = [{ id: 'all', label: 'Todos' }, { id: 'completed', label: 'Feitos' }, { id: 'active', label: 'Ativos' }]\n\n    let filteredList = this.props.display === \"all\" ? this.props.todo\n      : this.props.display === \"completed\" ? this.props.todo.filter(element => element.complete)\n        : this.props.todo.filter(element => !element.complete)\n\n    let ListDisplay = filteredList.map((element) => (\n      <Task\n        key={element.id}\n        text={element.text}\n        check={() => { this.props.toggleComplete(element.id) }}\n        remove={() => { this.props.removeTodo(element.id) }}\n        complete={element.complete}\n        selected={element.selected}\n      />\n    ))\n\n    let navButtons = buttons.map((element) => (\n      <button\n        key={element.id}\n        className={\n          this.props.display === element.id ? 'btn-outline-success1 btn-settings selected'\n            : 'btn-outline-success1 btn-settings'}\n        onClick={() => { this.props.updateDisplay(element.id) }}\n      >\n        {element.label}\n      </button>\n    ))\n    return (\n      <div className='container todo-wrapper mt-3'>\n        <div className='text-center pt-3 header1'><h2>Lista de Tarefas</h2></div>\n        <TodoInput\n          className='mt-3'\n        />\n        <div className='list-nav-buttons'>\n          {navButtons}\n        </div>\n        <div className=\"list container mt-3\">\n          {ListDisplay}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const todo = state.todoList.todos\n  const display = state.todoList.display\n  return { todo, display };\n};\n\n\nexport default connect(mapStateToProps, { removeTodo, toggleComplete, updateDisplay })(TodoList);","import React from 'react';\nimport PomodoroClock from './components/pomodoro/PomodoroApp.js';\nimport TodoList from './components/toDoList/TodoListApp'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className= 'global-container'>\n        <PomodoroClock />\n        <TodoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, UPDATE_DISPLAY } from '../actions/actionType'\n\nconst initialState = {\n  display: \"all\",\n  todos: []\n};\n\nconst todosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n\n      const{id, text, complete} = action\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {id, text, complete}\n        ]\n      }\n\n    case REMOVE_TODO:\n\n      const idx = state.todos.findIndex((element) => element.id === action.id)\n      return{\n        ...state,\n        todos: [...state.todos.slice(0, idx),\n          ...state.todos.slice(idx+1, state.todos.length)\n        ]        \n      }\n\n    case TOGGLE_TODO:\n\n      const toggleIdx = state.todos.findIndex((element) => element.id === action.id)\n      const newTodos = [...state.todos];\n      newTodos[toggleIdx].complete = !newTodos[toggleIdx].complete\n      return{\n        ...state,\n        todos: [\n          ...newTodos\n        ]        \n      }\n\n    case UPDATE_DISPLAY:\n\n      return{\n        ...state,\n        display: action.text\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default todosReducer","import Duration from 'luxon/src/duration.js';\nimport { ADD_TIME, SUB_TIME, START_PAUSE, RESET, TIMER, NEW_SESSION } from '../actions/actionType'\n\nconst { DateTime } = require(\"luxon\");\n\nconst initialState = {\n  sessionLength: 25,\n  breakLength: 5,\n  longBreakLength: 20,\n  timerLabel: \"Sessão de Estudo\",\n  timeLeft: Duration.fromObject({ minutes: 25 }),\n  running: false,\n  reseted: true,\n  sessions: 0,\n  startPauseLabel: \"Começar\"\n}\n\nconst pomodoroReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TIME:\n      return {\n        ...state,\n        sessionLength: action.label === 'session-label' && state.sessionLength < 60 ? state.sessionLength + 1 : state.sessionLength,\n        breakLength: action.label === 'break-label' && state.breakLength < 60 ? state.breakLength + 1 : state.breakLength,\n        longBreakLength: action.label === 'long-break-label' && state.longBreakLength < 60 ? state.longBreakLength + 1 : state.longBreakLength,\n        timeLeft: action.label === \"break-label\" ?\n        Duration.fromObject({ minutes: state.breakLength + 1 }) :\n        action.label === \"long-break-label\" ?\n        Duration.fromObject({ minutes: state.longBreakLength + 1 }) :\n        Duration.fromObject({ minutes: state.sessionLength + 1 }),\n        timerLabel: action.label === \"session-label\" ? \"Sessão de Estudo\" : action.label === \"break-label\" ? \"Pausa Curta\" : \"Pausa Longa\"\n      }\n    case SUB_TIME:\n      return {\n        ...state,\n        sessionLength: action.label === 'session-label' && state.sessionLength > 1 ? state.sessionLength - 1 : state.sessionLength,\n        breakLength: action.label === 'break-label' && state.breakLength > 1 ? state.breakLength - 1 : state.breakLength,\n        longBreakLength: action.label === 'long-break-label' && state.longBreakLength > 1 ? state.longBreakLength - 1 : state.longBreakLength,\n        timeLeft: action.label === \"break-label\" && state.breakLength > 1 ?\n        Duration.fromObject({ minutes: state.breakLength - 1 }) :\n        action.label === \"long-break-label\" && state.breakLength > 1 ?\n        Duration.fromObject({ minutes: state.longBreakLength - 1 }) : action.label === 'session-label' && state.sessionLength > 1 ?\n        Duration.fromObject({ minutes: state.sessionLength - 1 }) : state.timeLeft,\n        timerLabel: action.label === \"session-label\" ? \"Sessão de Estudo\" : action.label === \"break-label\" ? \"Pausa Curta\" : \"Pausa Longa\"\n      }\n\n    case START_PAUSE:\n      return {\n        ...state,\n        running: !state.running,\n        reseted: state.reseted && false,\n        startPauseLabel: state.startPauseLabel === \"Começar\" ? \"Pausar\" : \"Começar\"\n      }\n\n    case RESET:\n      return {\n        ...state,\n        running: false,\n        reseted: true,\n        sessionLength: 25,\n        breakLength: 5,\n        longBreakLength: 20,\n        timerLabel: \"Sessão de Estudo\",\n        timeLeft: Duration.fromObject({ minutes: 25 }),\n        startPauseLabel: \"Começar\"\n\n      }\n    \n    case TIMER:\n      const now = DateTime.local().set({ milliseconds: 0 })\n      return {\n        ...state,\n        timeLeft: Duration.fromObject(action.end.diff(now, ['minutes', 'seconds']).toObject()),\n      }\n\n    case NEW_SESSION:\n      if(action.isLongBreak){\n        return{\n          ...state,\n          timerLabel: \"Pausa Longa\",\n          timeLeft: Duration.fromObject({ minutes: state.longBreakLength }),\n          sessions: 0\n        }\n      }\n      else{\n        return {\n        ...state,\n        timerLabel: state.timerLabel === \"Sessão de Estudo\" ? \"Pausa Curta\" : \"Sessão de Estudo\",\n        timeLeft: state.timerLabel === \"Sessão de Estudo\" ? Duration.fromObject({ minutes: state.breakLength }) :\n          Duration.fromObject({ minutes: state.sessionLength }),\n        sessions: state.sessions + 1,\n        }\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default pomodoroReduce","\nconst randomPhrasesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'Something':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default randomPhrasesReducer","import { combineReducers } from 'redux'\nimport todoReducer from './todosReducer'\nimport pomodoroReduce from './pomodoroReduce'\nimport phrasesReducer from './randomPhrasesReducer'\n\nexport default combineReducers({\n  todoList: todoReducer,\n  pomodoro: pomodoroReduce,\n  phrases: phrasesReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers/index.js'\n\nconst store = createStore(\n  reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}